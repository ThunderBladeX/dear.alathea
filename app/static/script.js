class ErrorLogger{static log(error,context=''){const timestamp=new Date().toISOString();const errorInfo={timestamp,context,message:error.message||'Unknown error',stack:error.stack||'No stack trace available',userAgent:navigator.userAgent,url:window.location.href};console.error('Error logged:',errorInfo);if(window.gtag){window.gtag('event','exception',{description:`${context}: ${error.message}`,fatal:!1})}}
static showUserMessage(message,type='error'){try{let notification=document.querySelector('.error-notification');if(!notification){notification=document.createElement('div');notification.className=`error-notification ${type}`;document.body.appendChild(notification)}
notification.textContent=message;notification.classList.add('show');setTimeout(()=>{notification.classList.remove('show')},5000)}catch(e){alert(message)}}}
document.addEventListener('DOMContentLoaded',function(){try{initializeNavigation();initializeGallery();initializeVoting();initializePageFeatures()}catch(error){ErrorLogger.log(error,'DOMContentLoaded initialization')}});function initializeNavigation(){try{const navTabs=document.querySelectorAll('.nav-tab');const contentSections=document.querySelectorAll('.content-section');if(navTabs.length===0){console.warn('No navigation tabs found');return}
navTabs.forEach((tab,index)=>{try{tab.addEventListener('click',function(e){try{e.preventDefault();navTabs.forEach(t=>{try{t.classList.remove('active')}catch(err){ErrorLogger.log(err,`Removing active class from nav tab ${t.dataset.section || 'unknown'}`)}});contentSections.forEach(s=>{try{s.classList.remove('active')}catch(err){ErrorLogger.log(err,'Removing active class from content section')}});this.classList.add('active');const sectionName=this.dataset.section;if(!sectionName){throw new Error('Tab missing data-section attribute')}
const targetSection=document.querySelector(`.${sectionName}-section`);if(targetSection){targetSection.classList.add('active')}else{console.warn(`Target section .${sectionName}-section not found`)}}catch(error){ErrorLogger.log(error,`Navigation tab click handler for ${this.dataset.section || 'unknown'}`);ErrorLogger.showUserMessage('Navigation error occurred. Please refresh the page.')}})}catch(error){ErrorLogger.log(error,`Adding click listener to nav tab ${index}`)}});try{const defaultTab=document.querySelector('.nav-tab[data-section="gallery"]');if(defaultTab){defaultTab.click()}}catch(error){ErrorLogger.log(error,'Clicking default navigation tab')}}catch(error){ErrorLogger.log(error,'Navigation initialization')}}
function initializeGallery(){try{const galleryItems=document.querySelectorAll('.gallery-item');const infoPanel=document.querySelector('.info-panel .info-content');if(!infoPanel){console.warn('Info panel not found - gallery hover effects disabled');return}
if(galleryItems.length===0){console.warn('No gallery items found');return}
galleryItems.forEach((item,index)=>{try{item.addEventListener('mouseenter',function(){try{const title=this.dataset.title||'Untitled';const caption=this.dataset.caption||'';const date=this.dataset.date;let infoHTML=`<h4>✨ ${title} ✨</h4>`;if(caption){infoHTML+=`<p class="info-text">${caption}</p>`}
if(date){try{const dateObj=new Date(date);if(isNaN(dateObj.getTime())){throw new Error('Invalid date format')}
infoHTML+=`<p class="info-date">Created: ${dateObj.toLocaleDateString()}</p>`}catch(dateError){ErrorLogger.log(dateError,`Parsing date for gallery item: ${date}`);infoHTML+=`<p class="info-date">Created: ${date}</p>`}}
infoPanel.innerHTML=infoHTML}catch(error){ErrorLogger.log(error,`Gallery item mouseenter for item ${index}`);infoPanel.innerHTML='<h4>✨ Artwork Details ✨</h4><p class="info-text">Error loading details</p>'}});item.addEventListener('mouseleave',function(){try{infoPanel.innerHTML=`
                            <h4>Hover over artwork to see details! ✨</h4>
                            <p class="info-text">Click to view full size and leave comments</p>
                        `}catch(error){ErrorLogger.log(error,`Gallery item mouseleave for item ${index}`)}})}catch(error){ErrorLogger.log(error,`Adding event listeners to gallery item ${index}`)}})}catch(error){ErrorLogger.log(error,'Gallery initialization')}}
function initializeVoting(){try{const voteButtons=document.querySelectorAll('.vote-btn');if(voteButtons.length===0){console.warn('No vote buttons found');return}
voteButtons.forEach((button,index)=>{try{button.addEventListener('click',function(){try{const commentId=this.dataset.comment;const voteType=this.classList.contains('upvote')?'up':'down';if(!commentId){throw new Error('Vote button missing comment ID')}
this.disabled=!0;const originalText=this.textContent;this.textContent='...';fetch('/vote_comment',{method:'POST',headers:{'Content-Type':'application/json',},body:JSON.stringify({comment_id:commentId,vote_type:voteType})}).then(response=>{if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`)}
return response.json()}).then(result=>{try{if(result.success){const upvoteBtn=document.querySelector(`.upvote[data-comment="${commentId}"]`);const downvoteBtn=document.querySelector(`.downvote[data-comment="${commentId}"]`);if(upvoteBtn)upvoteBtn.textContent=`↑ ${result.upvotes || 0}`;if(downvoteBtn)downvoteBtn.textContent=`↓ ${result.downvotes || 0}`;this.style.transform='scale(1.2)';setTimeout(()=>{this.style.transform='scale(1)'},200)}else{throw new Error(result.message||'Voting failed')}}catch(error){ErrorLogger.log(error,'Processing vote response');ErrorLogger.showUserMessage('Error processing vote result')}}).catch(error=>{ErrorLogger.log(error,`Voting for comment ${commentId}`);ErrorLogger.showUserMessage('Error voting. Please try again.');this.textContent=originalText}).finally(()=>{this.disabled=!1})}catch(error){ErrorLogger.log(error,`Vote button click handler for comment ${this.dataset.comment || 'unknown'}`);ErrorLogger.showUserMessage('Error processing vote');this.disabled=!1}})}catch(error){ErrorLogger.log(error,`Adding click listener to vote button ${index}`)}})}catch(error){ErrorLogger.log(error,'Vote button initialization')}}
function calculatePrice(){try{const form=document.getElementById('commissionForm');if(!form){throw new Error('Commission form not found')}
const formData=new FormData(form);const data={type:formData.get('type'),multiple_characters:document.getElementById('multipleChars')?.checked||!1,nsfw:document.getElementById('nsfw')?.checked||!1,rush:document.getElementById('rush')?.checked||!1,unrendered:document.getElementById('unrendered')?.checked||!1,indonesian_discount:document.getElementById('indonesian')?.checked||!1};if(!data.type){throw new Error('Please select a commission type')}
const submitButton=form.querySelector('button[type="button"]');if(submitButton){submitButton.disabled=!0;submitButton.textContent='Calculating...'}
fetch('/calculate_commission',{method:'POST',headers:{'Content-Type':'application/json',},body:JSON.stringify(data)}).then(response=>{if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`)}
return response.json()}).then(result=>{try{if(result.error){throw new Error(result.error)}
const basePriceEl=document.getElementById('basePrice');const totalPriceEl=document.getElementById('totalPrice');const priceResultEl=document.getElementById('priceResult');if(!basePriceEl||!totalPriceEl||!priceResultEl){throw new Error('Price display elements not found')}
basePriceEl.textContent=result.base_price||'N/A';totalPriceEl.textContent=result.total_price||'N/A';priceResultEl.style.display='block';priceResultEl.style.opacity='0';priceResultEl.style.transform='translateY(20px)';setTimeout(()=>{priceResultEl.style.transition='all 0.5s ease';priceResultEl.style.opacity='1';priceResultEl.style.transform='translateY(0)'},100)}catch(error){ErrorLogger.log(error,'Processing price calculation result');ErrorLogger.showUserMessage('Error displaying price calculation')}}).catch(error=>{ErrorLogger.log(error,'Price calculation request');ErrorLogger.showUserMessage('Error calculating price. Please try again.')}).finally(()=>{if(submitButton){submitButton.disabled=!1;submitButton.textContent='Calculate Price'}})}catch(error){ErrorLogger.log(error,'Price calculation initialization');ErrorLogger.showUserMessage('Error initializing price calculation')}}
function toggleClothing(itemId){try{if(!itemId){throw new Error('No item ID provided')}
const clothingItem=document.getElementById(itemId);if(!clothingItem){throw new Error(`Clothing item with ID ${itemId} not found`)}
const isHidden=clothingItem.style.opacity==='0'||clothingItem.style.opacity==='';if(isHidden){clothingItem.style.opacity='1';clothingItem.style.visibility='visible'}else{clothingItem.style.opacity='0';clothingItem.style.visibility='hidden'}}catch(error){ErrorLogger.log(error,`Toggle clothing for item ${itemId}`);ErrorLogger.showUserMessage('Error toggling clothing item')}}
function toggleReply(commentId){try{if(!commentId){throw new Error('No comment ID provided')}
const replyForm=document.getElementById(`reply-${commentId}`);if(!replyForm){throw new Error(`Reply form for comment ${commentId} not found`)}
const isHidden=replyForm.style.display==='none'||replyForm.style.display==='';if(isHidden){replyForm.style.display='block';replyForm.style.opacity='0';replyForm.style.transform='translateY(-10px)';setTimeout(()=>{replyForm.style.transition='all 0.3s ease';replyForm.style.opacity='1';replyForm.style.transform='translateY(0)'},50)}else{replyForm.style.opacity='0';replyForm.style.transform='translateY(-10px)';setTimeout(()=>{replyForm.style.display='none'},300)}}catch(error){ErrorLogger.log(error,`Toggle reply for comment ${commentId}`);ErrorLogger.showUserMessage('Error toggling reply form')}}
function initializePageFeatures(){try{adjustGalleryLayout();adjustCharacterCanvas();enhanceFormExperience();animateNotifications();initializeSmoothScrolling();try{const lazyLoader=new LazyLoader()}catch(error){ErrorLogger.log(error,'LazyLoader initialization')}
try{const responsiveHandler=new ResponsiveHandler()}catch(error){ErrorLogger.log(error,'ResponsiveHandler initialization')}
try{const performanceMonitor=new PerformanceMonitor()}catch(error){ErrorLogger.log(error,'PerformanceMonitor initialization')}
try{const ocId=document.body.dataset.ocId;if(ocId){new ClothingReorderer(ocId)}}catch(error){ErrorLogger.log(error,'ClothingReorderer initialization')}
if('serviceWorker' in navigator){navigator.serviceWorker.register('/sw.js').catch(error=>ErrorLogger.log(error,'Service Worker registration'))}}catch(error){ErrorLogger.log(error,'Page features initialization')}}
function adjustGalleryLayout(){try{const galleryItems=document.querySelectorAll('.gallery-item');galleryItems.forEach((item,index)=>{try{const img=item.querySelector('img');if(img){img.onload=function(){try{item.classList.add('loaded')}catch(error){ErrorLogger.log(error,`Adding loaded class to gallery item ${index}`)}};img.onerror=function(){ErrorLogger.log(new Error('Image failed to load'),`Gallery image load error for item ${index}`);item.classList.add('error')}}}catch(error){ErrorLogger.log(error,`Processing gallery item ${index}`)}})}catch(error){ErrorLogger.log(error,'Adjusting gallery layout')}}
function adjustCharacterCanvas(){try{const canvas=document.getElementById('characterCanvas');if(!canvas){return}
const baseCharacter=document.getElementById('baseCharacter');if(baseCharacter){const clothingItems=document.querySelectorAll('.clothing-item');clothingItems.forEach((item,index)=>{try{item.style.position='absolute';item.style.top='0';item.style.left='50%';item.style.transform='translateX(-50%)'}catch(error){ErrorLogger.log(error,`Positioning clothing item ${index}`)}})}}catch(error){ErrorLogger.log(error,'Adjusting character canvas')}}
function initializeSmoothScrolling(){try{const navLinks=document.querySelectorAll('a[href^="#"]');navLinks.forEach((link,index)=>{try{link.addEventListener('click',function(e){try{e.preventDefault();const targetId=this.getAttribute('href');const targetSection=document.querySelector(targetId);if(targetSection){targetSection.scrollIntoView({behavior:'smooth',block:'start'})}else{console.warn(`Target section ${targetId} not found`)}}catch(error){ErrorLogger.log(error,`Smooth scroll for link to ${this.getAttribute('href')}`)}})}catch(error){ErrorLogger.log(error,`Adding smooth scroll to link ${index}`)}})}catch(error){ErrorLogger.log(error,'Smooth scrolling initialization')}}
function enhanceFormExperience(){try{const forms=document.querySelectorAll('form');forms.forEach((form,formIndex)=>{try{const inputs=form.querySelectorAll('input, textarea');inputs.forEach((input,inputIndex)=>{try{input.addEventListener('focus',function(){try{this.parentElement.classList.add('focused')}catch(error){ErrorLogger.log(error,`Adding focus class to input ${inputIndex} in form ${formIndex}`)}});input.addEventListener('blur',function(){try{this.parentElement.classList.remove('focused');if(this.value.trim()!==''){this.parentElement.classList.add('has-content')}else{this.parentElement.classList.remove('has-content')}}catch(error){ErrorLogger.log(error,`Processing blur event for input ${inputIndex} in form ${formIndex}`)}});if(input.value.trim()!==''){input.parentElement.classList.add('has-content')}}catch(error){ErrorLogger.log(error,`Adding events to input ${inputIndex} in form ${formIndex}`)}})}catch(error){ErrorLogger.log(error,`Processing form ${formIndex}`)}})}catch(error){ErrorLogger.log(error,'Form experience enhancement')}}
function animateNotifications(){try{const notifications=document.querySelectorAll('.flash-message');notifications.forEach((notification,index)=>{try{notification.style.opacity='0';notification.style.transform='translateY(-20px)';setTimeout(()=>{try{notification.style.transition='all 0.5s ease';notification.style.opacity='1';notification.style.transform='translateY(0)'}catch(error){ErrorLogger.log(error,`Showing notification ${index}`)}},index*100);setTimeout(()=>{try{notification.style.opacity='0';notification.style.transform='translateY(-20px)';setTimeout(()=>{try{notification.remove()}catch(error){ErrorLogger.log(error,`Removing notification ${index}`)}},500)}catch(error){ErrorLogger.log(error,`Hiding notification ${index}`)}},5000+(index*100))}catch(error){ErrorLogger.log(error,`Animating notification ${index}`)}})}catch(error){ErrorLogger.log(error,'Notification animation')}}
class LazyLoader{constructor(){this.imageObserver=null;try{this.init()}catch(error){ErrorLogger.log(error,'LazyLoader constructor')}}
init(){try{if('IntersectionObserver' in window){this.imageObserver=new IntersectionObserver((entries)=>{entries.forEach(entry=>{try{if(entry.isIntersecting){this.loadImage(entry.target);this.imageObserver.unobserve(entry.target)}}catch(error){ErrorLogger.log(error,'Processing intersection observer entry')}})},{rootMargin:'50px 0px',threshold:0.01});this.observeImages()}else{console.warn('IntersectionObserver not supported, loading all images');this.loadAllImages()}}catch(error){ErrorLogger.log(error,'LazyLoader initialization');this.loadAllImages()}}
observeImages(){try{document.querySelectorAll('img[data-src]').forEach(img=>{try{this.imageObserver.observe(img)}catch(error){ErrorLogger.log(error,`Observing image: ${img.dataset.src}`)}})}catch(error){ErrorLogger.log(error,'Observing images')}}
loadImage(img){try{const originalSrc=img.dataset.src;if(!originalSrc){throw new Error('Image missing data-src attribute')}
if(img.dataset.placeholder){try{const placeholder=new Image();placeholder.onload=()=>{img.style.filter='blur(5px)';img.src=img.dataset.placeholder;img.style.opacity='1'};placeholder.onerror=()=>{ErrorLogger.log(new Error('Placeholder failed to load'),`Placeholder: ${img.dataset.placeholder}`)};placeholder.src=img.dataset.placeholder}catch(error){ErrorLogger.log(error,'Loading placeholder image')}}
const mainImage=new Image();mainImage.onload=()=>{try{img.src=originalSrc;img.style.filter='none';img.classList.add('loaded')}catch(error){ErrorLogger.log(error,'Setting loaded image properties')}};mainImage.onerror=()=>{ErrorLogger.log(new Error('Main image failed to load'),`Image: ${originalSrc}`);try{img.classList.add('error');img.alt='Image failed to load'}catch(error){ErrorLogger.log(error,'Setting error state for failed image')}};mainImage.src=originalSrc}catch(error){ErrorLogger.log(error,`Loading image: ${img.dataset?.src || 'unknown'}`)}}
loadAllImages(){try{document.querySelectorAll('img[data-src]').forEach(img=>{this.loadImage(img)})}catch(error){ErrorLogger.log(error,'Loading all images fallback')}}}
class ResponsiveHandler{constructor(){this.breakpoints={mobile:480,tablet:768,desktop:1024};try{this.currentBreakpoint=this.getCurrentBreakpoint();this.init()}catch(error){ErrorLogger.log(error,'ResponsiveHandler constructor')}}
init(){try{this.handleResize();window.addEventListener('resize',this.debounce(this.handleResize.bind(this),250));this.optimizeForTouch();this.handleOrientation()}catch(error){ErrorLogger.log(error,'ResponsiveHandler initialization')}}
getCurrentBreakpoint(){try{const width=window.innerWidth;if(width<=this.breakpoints.mobile)return'mobile';if(width<=this.breakpoints.tablet)return'tablet';return'desktop'}catch(error){ErrorLogger.log(error,'Getting current breakpoint');return'desktop'}}
handleResize(){try{const newBreakpoint=this.getCurrentBreakpoint();if(newBreakpoint!==this.currentBreakpoint){this.currentBreakpoint=newBreakpoint;document.body.className=`breakpoint-${newBreakpoint}`;this.adjustLayoutForBreakpoint()}
this.adjustGalleryMasonry()}catch(error){ErrorLogger.log(error,'Handling resize event')}}
adjustLayoutForBreakpoint(){try{switch(this.currentBreakpoint){case 'mobile':this.mobileOptimizations();break;case 'tablet':this.tabletOptimizations();break;case 'desktop':this.desktopOptimizations();break}}catch(error){ErrorLogger.log(error,`Adjusting layout for ${this.currentBreakpoint}`)}}
mobileOptimizations(){try{const characterArt=document.querySelector('.character-art');if(characterArt)characterArt.style.display='none';const topNav=document.querySelector('.top-nav');if(topNav)topNav.style.flexDirection='column';const galleryGrid=document.querySelector('.gallery-grid');if(galleryGrid)galleryGrid.style.gridTemplateColumns='repeat(2, 1fr)';const commentForms=document.querySelectorAll('.comment-form textarea');commentForms.forEach(textarea=>{textarea.style.minHeight='80px'})}catch(error){ErrorLogger.log(error,'Mobile optimizations')}}
tabletOptimizations(){try{const galleryGrid=document.querySelector('.gallery-grid');if(galleryGrid)galleryGrid.style.gridTemplateColumns='repeat(3, 1fr)'}catch(error){ErrorLogger.log(error,'Tablet optimizations')}}
desktopOptimizations(){try{const characterArt=document.querySelector('.character-art');if(characterArt)characterArt.style.display='block';const topNav=document.querySelector('.top-nav');if(topNav)topNav.style.flexDirection='row'}catch(error){ErrorLogger.log(error,'Desktop optimizations')}}
optimizeForTouch(){try{if('ontouchstart' in window){document.body.classList.add('touch-device');const clickables=document.querySelectorAll('button, .nav-link, .gallery-item, .oc-folder');clickables.forEach(el=>{try{el.style.minHeight='44px';el.style.minWidth='44px';el.addEventListener('touchstart',function(){try{this.classList.add('touched')}catch(error){ErrorLogger.log(error,'Adding touched class')}});el.addEventListener('touchend',function(){try{setTimeout(()=>this.classList.remove('touched'),150)}catch(error){ErrorLogger.log(error,'Removing touched class')}})}catch(error){ErrorLogger.log(error,'Setting up touch optimization for clickable element')}})}}catch(error){ErrorLogger.log(error,'Touch optimization')}}
handleOrientation(){try{window.addEventListener('orientationchange',()=>{setTimeout(()=>{try{this.handleResize();this.adjustGalleryMasonry()}catch(error){ErrorLogger.log(error,'Handling orientation change')}},100)})}catch(error){ErrorLogger.log(error,'Setting up orientation change handler')}}
adjustGalleryMasonry(){try{const masonryContainer=document.querySelector('.gallery-masonry');if(!masonryContainer)return;const items=masonryContainer.querySelectorAll('.gallery-card');items.forEach(item=>{try{item.style.breakInside='avoid';item.style.pageBreakInside='avoid'}catch(error){ErrorLogger.log(error,'Setting masonry item styles')}})}catch(error){ErrorLogger.log(error,'Adjusting gallery masonry')}}
debounce(func,wait){let timeout;return function executedFunction(...args){try{const later=()=>{clearTimeout(timeout);func(...args)};clearTimeout(timeout);timeout=setTimeout(later,wait)}catch(error){ErrorLogger.log(error,'Debounce function execution')}}}}
class PerformanceMonitor{constructor(){this.metrics={pageLoad:0,firstPaint:0,firstContentfulPaint:0,largestContentfulPaint:0,cumulativeLayoutShift:0};try{this.init()}catch(error){ErrorLogger.log(error,'PerformanceMonitor constructor')}}
init(){try{if('performance' in window){this.measurePageLoad();this.measurePaintMetrics();this.measureCLS()}else{console.warn('Performance API not available')}}catch(error){ErrorLogger.log(error,'PerformanceMonitor initialization')}}
measurePageLoad(){try{window.addEventListener('load',()=>{try{const navigation=performance.getEntriesByType('navigation')[0];if(navigation){this.metrics.pageLoad=navigation.loadEventEnd-navigation.loadEventStart;this.reportMetrics()}}catch(error){ErrorLogger.log(error,'Measuring page load time')}})}catch(error){ErrorLogger.log(error,'Setting up page load measurement')}}
measurePaintMetrics(){try{if('PerformanceObserver' in window){const observer=new PerformanceObserver((list)=>{try{for(const entry of list.getEntries()){switch(entry.name){case 'first-paint':this.metrics.firstPaint=entry.startTime;break;case 'first-contentful-paint':this.metrics.firstContentfulPaint=entry.startTime;break}}}catch(error){ErrorLogger.log(error,'Processing paint metrics')}});observer.observe({entryTypes:['paint']});const lcpObserver=new PerformanceObserver((list)=>{try{const entries=list.getEntries();const lastEntry=entries[entries.length-1];this.metrics.largestContentfulPaint=lastEntry.startTime}catch(error){ErrorLogger.log(error,'Processing LCP metric')}});lcpObserver.observe({entryTypes:['largest-contentful-paint']})}}catch(error){ErrorLogger.log(error,'Setting up paint metrics measurement')}}
measureCLS(){try{if('PerformanceObserver' in window){let clsValue=0;const observer=new PerformanceObserver((list)=>{try{for(const entry of list.getEntries()){if(!entry.hadRecentInput){clsValue+=entry.value}}
this.metrics.cumulativeLayoutShift=clsValue}catch(error){ErrorLogger.log(error,'Processing CLS metric')}});observer.observe({entryTypes:['layout-shift']})}}catch(error){ErrorLogger.log(error,'Setting up CLS measurement')}}
reportMetrics(){try{if(window.location.hostname==='localhost'){console.table(this.metrics)}
if(window.gtag){window.gtag('event','page_performance',{page_load_time:this.metrics.pageLoad,first_contentful_paint:this.metrics.firstContentfulPaint,largest_contentful_paint:this.metrics.largestContentfulPaint,cumulative_layout_shift:this.metrics.cumulativeLayoutShift})}}catch(error){ErrorLogger.log(error,'Reporting performance metrics')}}}
class ClothingReorderer{constructor(ocId){this.ocId=ocId;this.draggedElement=null;this.clothingItems=[];try{this.init()}catch(error){ErrorLogger.log(error,'ClothingReorderer constructor')}}
init(){try{const clothingControls=document.querySelector('.clothing-controls');if(!clothingControls){console.warn('Clothing controls not found');return}
this.setupDragAndDrop();this.addReorderUI()}catch(error){ErrorLogger.log(error,'ClothingReorderer initialization')}}
setupDragAndDrop(){try{const clothingToggles=document.querySelectorAll('.clothing-toggle');clothingToggles.forEach((toggle,index)=>{try{toggle.draggable=!0;toggle.addEventListener('dragstart',this.handleDragStart.bind(this));toggle.addEventListener('dragover',this.handleDragOver.bind(this));toggle.addEventListener('drop',this.handleDrop.bind(this));toggle.addEventListener('dragend',this.handleDragEnd.bind(this));const dragHandle=document.createElement('div');dragHandle.className='drag-handle';dragHandle.innerHTML='⋮⋮';toggle.prepend(dragHandle)}catch(error){ErrorLogger.log(error,`Setting up drag and drop for clothing toggle ${index}`)}})}catch(error){ErrorLogger.log(error,'Setting up drag and drop')}}
addReorderUI(){try{const clothingControls=document.querySelector('.clothing-controls');const reorderBtn=document.createElement('button');reorderBtn.className='reorder-btn';reorderBtn.textContent='↕️ Reorder Layers';reorderBtn.onclick=()=>this.toggleReorderMode();const header=clothingControls.querySelector('h3');if(header){header.after(reorderBtn)}else{clothingControls.prepend(reorderBtn)}}catch(error){ErrorLogger.log(error,'Adding reorder UI')}}
handleDragStart(e){try{this.draggedElement=e.target;e.target.classList.add('dragging')}catch(error){ErrorLogger.log(error,'Handling drag start')}}
handleDragOver(e){try{e.preventDefault();const afterElement=this.getDragAfterElement(e.currentTarget.parentNode,e.clientY);if(afterElement==null){e.currentTarget.parentNode.appendChild(this.draggedElement)}else{e.currentTarget.parentNode.insertBefore(this.draggedElement,afterElement)}}catch(error){ErrorLogger.log(error,'Handling drag over')}}
handleDrop(e){try{e.preventDefault();this.updateZIndices()}catch(error){ErrorLogger.log(error,'Handling drop')}}
handleDragEnd(e){try{e.target.classList.remove('dragging');this.draggedElement=null}catch(error){ErrorLogger.log(error,'Handling drag end')}}
getDragAfterElement(container,y){try{const draggableElements=[...container.querySelectorAll('.clothing-toggle:not(.dragging)')];return draggableElements.reduce((closest,child)=>{try{const box=child.getBoundingClientRect();const offset=y-box.top-box.height/2;if(offset<0&&offset>closest.offset){return{offset:offset,element:child}}else{return closest}}catch(error){ErrorLogger.log(error,'Processing drag after element');return closest}},{offset:Number.NEGATIVE_INFINITY}).element}catch(error){ErrorLogger.log(error,'Getting drag after element');return null}}
updateZIndices(){try{const clothingToggles=document.querySelectorAll('.clothing-toggle');const newOrder=[];clothingToggles.forEach((toggle,index)=>{try{const input=toggle.querySelector('input');if(!input||!input.dataset.item){throw new Error('Toggle missing input or data-item attribute')}
const itemId=input.dataset.item.replace('item-','');const zIndex=clothingToggles.length-index;newOrder.push({id:itemId,z_index:zIndex});const clothingItem=document.getElementById(`item-${itemId}`);if(clothingItem){clothingItem.style.zIndex=zIndex}}catch(error){ErrorLogger.log(error,`Processing clothing toggle ${index} for z-index update`)}});fetch('/admin/reorder_clothing',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({oc_id:this.ocId,clothing_order:newOrder})}).then(response=>{if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`)}
return response.json()}).catch(error=>{ErrorLogger.log(error,'Sending clothing reorder to server');ErrorLogger.showUserMessage('Error saving clothing order')})}catch(error){ErrorLogger.log(error,'Updating z-indices')}}
toggleReorderMode(){try{const clothingControls=document.querySelector('.clothing-controls');if(clothingControls){clothingControls.classList.toggle('reorder-mode')}}catch(error){ErrorLogger.log(error,'Toggling reorder mode')}}}
class GalleryManager{constructor(){this.currentImageIndex=0;this.images=[];try{this.initLightbox()}catch(error){ErrorLogger.log(error,'GalleryManager constructor')}}
initLightbox(){try{const lightbox=document.createElement('div');lightbox.className='lightbox-overlay';lightbox.innerHTML=`
                <div class="lightbox-content">
                    <button class="lightbox-close">&times;</button>
                    <button class="lightbox-prev">&#8249;</button>
                    <img class="lightbox-image" src="" alt="">
                    <button class="lightbox-next">&#8250;</button>
                    <div class="lightbox-info">
                        <h3 class="lightbox-title"></h3>
                        <p class="lightbox-caption"></p>
                    </div>
                </div>
            `;document.body.appendChild(lightbox);const closeBtn=lightbox.querySelector('.lightbox-close');const prevBtn=lightbox.querySelector('.lightbox-prev');const nextBtn=lightbox.querySelector('.lightbox-next');if(closeBtn){closeBtn.addEventListener('click',()=>{try{this.closeLightbox()}catch(error){ErrorLogger.log(error,'Closing lightbox via close button')}})}
if(prevBtn){prevBtn.addEventListener('click',()=>{try{this.prevImage()}catch(error){ErrorLogger.log(error,'Previous image in lightbox')}})}
if(nextBtn){nextBtn.addEventListener('click',()=>{try{this.nextImage()}catch(error){ErrorLogger.log(error,'Next image in lightbox')}})}
lightbox.addEventListener('click',(e)=>{try{if(e.target===lightbox){this.closeLightbox()}}catch(error){ErrorLogger.log(error,'Closing lightbox via overlay click')}});document.addEventListener('keydown',(e)=>{try{if(lightbox.classList.contains('active')){switch(e.key){case 'Escape':this.closeLightbox();break;case 'ArrowLeft':this.prevImage();break;case 'ArrowRight':this.nextImage();break}}}catch(error){ErrorLogger.log(error,'Handling lightbox keyboard navigation')}})}catch(error){ErrorLogger.log(error,'Initializing lightbox')}}
openLightbox(imageIndex,images){try{if(!Array.isArray(images)||images.length===0){throw new Error('Invalid images array provided')}
this.currentImageIndex=imageIndex;this.images=images;const lightbox=document.querySelector('.lightbox-overlay');if(!lightbox){throw new Error('Lightbox not found')}
const img=lightbox.querySelector('.lightbox-image');const title=lightbox.querySelector('.lightbox-title');const caption=lightbox.querySelector('.lightbox-caption');const currentImage=this.images[this.currentImageIndex];if(!currentImage){throw new Error('Current image not found')}
if(img)img.src=currentImage.src||'';if(title)title.textContent=currentImage.title||'Untitled';if(caption)caption.textContent=currentImage.caption||'';lightbox.classList.add('active');document.body.style.overflow='hidden'}catch(error){ErrorLogger.log(error,'Opening lightbox');ErrorLogger.showUserMessage('Error opening image viewer')}}
closeLightbox(){try{const lightbox=document.querySelector('.lightbox-overlay');if(lightbox){lightbox.classList.remove('active')}
document.body.style.overflow=''}catch(error){ErrorLogger.log(error,'Closing lightbox')}}
prevImage(){try{if(this.images.length===0)return;this.currentImageIndex=(this.currentImageIndex-1+this.images.length)%this.images.length;this.updateLightboxImage()}catch(error){ErrorLogger.log(error,'Going to previous image')}}
nextImage(){try{if(this.images.length===0)return;this.currentImageIndex=(this.currentImageIndex+1)%this.images.length;this.updateLightboxImage()}catch(error){ErrorLogger.log(error,'Going to next image')}}
updateLightboxImage(){try{const lightbox=document.querySelector('.lightbox-overlay');if(!lightbox)return;const img=lightbox.querySelector('.lightbox-image');const title=lightbox.querySelector('.lightbox-title');const caption=lightbox.querySelector('.lightbox-caption');const currentImage=this.images[this.currentImageIndex];if(!currentImage){throw new Error('Current image not found')}
if(img){img.style.opacity='0';setTimeout(()=>{try{img.src=currentImage.src||'';if(title)title.textContent=currentImage.title||'Untitled';if(caption)caption.textContent=currentImage.caption||'';img.style.opacity='1'}catch(error){ErrorLogger.log(error,'Updating lightbox image content')}},150)}}catch(error){ErrorLogger.log(error,'Updating lightbox image')}}}
class ThemeManager{constructor(){this.themes={default:'Default Cottagecore',autumn:'Autumn Harvest',spring:'Spring Bloom',winter:'Winter Cozy'};try{this.currentTheme=this.getSavedTheme()||'default';this.init()}catch(error){ErrorLogger.log(error,'ThemeManager constructor');this.currentTheme='default'}}
getSavedTheme(){try{if(typeof Storage!=='undefined'){return localStorage.getItem('selectedTheme')}}catch(error){ErrorLogger.log(error,'Getting saved theme from localStorage')}
return null}
setSavedTheme(themeName){try{if(typeof Storage!=='undefined'){localStorage.setItem('selectedTheme',themeName)}}catch(error){ErrorLogger.log(error,'Saving theme to localStorage')}}
init(){try{this.createThemeSwitcher();this.applyTheme(this.currentTheme)}catch(error){ErrorLogger.log(error,'ThemeManager initialization')}}
createThemeSwitcher(){try{const switcher=document.createElement('div');switcher.className='theme-switcher';switcher.innerHTML=`
                <button class="theme-toggle">🎨</button>
                <div class="theme-options">
                    ${Object.entries(this.themes).map(([key, name]) => 
                        `<button class="theme-option" data-theme="${key}">${name}</button>`
                    ).join('')}
                </div>
            `;document.body.appendChild(switcher);const toggleBtn=switcher.querySelector('.theme-toggle');if(toggleBtn){toggleBtn.addEventListener('click',()=>{try{switcher.classList.toggle('open')}catch(error){ErrorLogger.log(error,'Toggling theme switcher')}})}
switcher.querySelectorAll('.theme-option').forEach(option=>{try{option.addEventListener('click',()=>{try{const themeName=option.dataset.theme;if(themeName&&this.themes[themeName]){this.switchTheme(themeName);switcher.classList.remove('open')}}catch(error){ErrorLogger.log(error,`Switching to theme: ${option.dataset.theme}`)}})}catch(error){ErrorLogger.log(error,'Adding click listener to theme option')}})}catch(error){ErrorLogger.log(error,'Creating theme switcher')}}
switchTheme(themeName){try{if(!this.themes[themeName]){throw new Error(`Theme ${themeName} not found`)}
this.currentTheme=themeName;this.setSavedTheme(themeName);this.applyTheme(themeName)}catch(error){ErrorLogger.log(error,`Switching theme to ${themeName}`)}}
applyTheme(themeName){try{document.body.className=`theme-${themeName}`;const root=document.documentElement;if(!root){throw new Error('Document root not found')}
switch(themeName){case 'autumn':root.style.setProperty('--primary-cream','#FFF4E6');root.style.setProperty('--dusty-rose','#C17A74');root.style.setProperty('--sage-green','#8B7355');root.style.setProperty('--golden-yellow','#D4A574');break;case 'spring':root.style.setProperty('--primary-cream','#F8FFF8');root.style.setProperty('--dusty-rose','#F8C8DC');root.style.setProperty('--sage-green','#90EE90');root.style.setProperty('--golden-yellow','#FFE135');break;case 'winter':root.style.setProperty('--primary-cream','#F0F8FF');root.style.setProperty('--dusty-rose','#B6D7FF');root.style.setProperty('--sage-green','#4F94CD');root.style.setProperty('--golden-yellow','#E6E6FA');break;default:root.style.setProperty('--primary-cream','#FFF8E7');root.style.setProperty('--dusty-rose','#D4A5A5');root.style.setProperty('--sage-green','#9CAF88');root.style.setProperty('--golden-yellow','#E8D5A3')}}catch(error){ErrorLogger.log(error,`Applying theme ${themeName}`)}}}
class SearchManager{constructor(){try{this.createSearchBar();this.setupSearch()}catch(error){ErrorLogger.log(error,'SearchManager constructor')}}
createSearchBar(){try{const searchContainer=document.createElement('div');searchContainer.className='search-container';searchContainer.innerHTML=`
                <input type="text" class="search-input" placeholder="Search artwork, characters, or blog posts...">
                <button class="search-clear" style="display: none;">&times;</button>
            `;const topNav=document.querySelector('.top-nav');if(topNav){topNav.appendChild(searchContainer)}else{console.warn('Top navigation not found - search bar not added')}}catch(error){ErrorLogger.log(error,'Creating search bar')}}
setupSearch(){try{const searchInput=document.querySelector('.search-input');const searchClear=document.querySelector('.search-clear');if(searchInput){searchInput.addEventListener('input',(e)=>{try{const query=e.target.value.toLowerCase().trim();if(query.length>0){if(searchClear)searchClear.style.display='block';this.performSearch(query)}else{if(searchClear)searchClear.style.display='none';this.clearSearch()}}catch(error){ErrorLogger.log(error,'Processing search input')}})}
if(searchClear){searchClear.addEventListener('click',()=>{try{if(searchInput){searchInput.value='';searchClear.style.display='none';this.clearSearch()}}catch(error){ErrorLogger.log(error,'Clearing search')}})}}catch(error){ErrorLogger.log(error,'Setting up search functionality')}}
performSearch(query){try{const galleryItems=document.querySelectorAll('.gallery-item');galleryItems.forEach(item=>{try{const title=(item.dataset.title||'').toLowerCase();const caption=(item.dataset.caption||'').toLowerCase();if(title.includes(query)||caption.includes(query)){item.style.display='block';item.classList.add('search-match')}else{item.style.display='none';item.classList.remove('search-match')}}catch(error){ErrorLogger.log(error,'Processing gallery item in search')}});const ocFolders=document.querySelectorAll('.oc-folder');ocFolders.forEach(folder=>{try{const nameElement=folder.querySelector('.folder-tab');const name=(nameElement?.textContent||'').toLowerCase();if(name.includes(query)){folder.style.display='block';folder.classList.add('search-match')}else{folder.style.display='none';folder.classList.remove('search-match')}}catch(error){ErrorLogger.log(error,'Processing OC folder in search')}});const blogPosts=document.querySelectorAll('.blog-preview');blogPosts.forEach(post=>{try{const titleElement=post.querySelector('.post-title');const summaryElement=post.querySelector('.post-summary');const title=(titleElement?.textContent||'').toLowerCase();const summary=(summaryElement?.textContent||'').toLowerCase();if(title.includes(query)||summary.includes(query)){post.style.display='block';post.classList.add('search-match')}else{post.style.display='none';post.classList.remove('search-match')}}catch(error){ErrorLogger.log(error,'Processing blog post in search')}})}catch(error){ErrorLogger.log(error,`Performing search for query: ${query}`)}}
clearSearch(){try{const allItems=document.querySelectorAll('.gallery-item, .oc-folder, .blog-preview');allItems.forEach(item=>{try{item.style.display='block';item.classList.remove('search-match')}catch(error){ErrorLogger.log(error,'Clearing search result for item')}})}catch(error){ErrorLogger.log(error,'Clearing search results')}}}
function addParallaxEffect(){try{const characterImg=document.querySelector('.character-img');if(!characterImg){console.warn('Character image not found - parallax effect disabled');return}
window.addEventListener('scroll',()=>{try{const scrolled=window.pageYOffset;const parallax=scrolled*0.5;characterImg.style.transform=`translateY(${parallax}px)`}catch(error){ErrorLogger.log(error,'Applying parallax effect')}})}catch(error){ErrorLogger.log(error,'Setting up parallax effect')}}
let galleryManager,themeManager,searchManager;document.addEventListener('DOMContentLoaded',function(){try{try{galleryManager=new GalleryManager()}catch(error){ErrorLogger.log(error,'GalleryManager initialization')}
try{themeManager=new ThemeManager()}catch(error){ErrorLogger.log(error,'ThemeManager initialization')}
try{searchManager=new SearchManager()}catch(error){ErrorLogger.log(error,'SearchManager initialization')}
try{addParallaxEffect()}catch(error){ErrorLogger.log(error,'Adding parallax effect')}}catch(error){ErrorLogger.log(error,'Secondary DOMContentLoaded initialization')}});window.toggleClothing=function(itemId){try{toggleClothing(itemId)}catch(error){ErrorLogger.log(error,'Global toggleClothing wrapper');ErrorLogger.showUserMessage('Error toggling clothing item')}};window.toggleReply=function(commentId){try{toggleReply(commentId)}catch(error){ErrorLogger.log(error,'Global toggleReply wrapper');ErrorLogger.showUserMessage('Error toggling reply form')}};window.calculatePrice=function(){try{calculatePrice()}catch(error){ErrorLogger.log(error,'Global calculatePrice wrapper');ErrorLogger.showUserMessage('Error calculating price')}};window.addEventListener('error',function(event){ErrorLogger.log(event.error||new Error(event.message),'Uncaught error')});window.addEventListener('unhandledrejection',function(event){ErrorLogger.log(new Error(event.reason),'Unhandled promise rejection')});const errorNotificationCSS=`
.error-notification{position:fixed;top:20px;right:20px;background:#f8d7da;color:#721c24;border:1px solid #f5c6cb;padding:12px 16px;border-radius:8px;font-size:14px;z-index:10000;max-width:300px;opacity:0;transform:translateY(-20px);transition:all 0.3s ease;box-shadow:0 4px 12px rgba(0,0,0,0.15)}
.error-notification.success{background:#d1edda;color:#155724;border-color:#c3e6cb}
.error-notification.warning{background:#fff3cd;color:#856404;border-color:#ffeaa7}
.error-notification.show{opacity:1;transform:translateY(0)}
.error-notification.info{background:#d1ecf1;color:#0c5460;border-color:#bee5eb}
@media (max-width:480px){.error-notification{left:10px;right:10px;max-width:none;top:10px}}
`;try{const style=document.createElement('style');style.textContent=errorNotificationCSS;document.head.appendChild(style)}catch(error){console.error('Failed to inject error notification CSS:',error)}
